-- ============================================
-- PROCEDIMIENTO LLENA SEGUIMIENTO
-- ============================================
CREATE OR REPLACE PROCEDURE dw.PRC_LLENA_SEGUIMIENTO(p_dim IN VARCHAR2) IS
BEGIN
  INSERT INTO dw.BD2_SEGUIMIENTO VALUES (p_dim, USER, SYSDATE);
END;
/


-- ============================================
-- TRIGGERS PARA LLENADO DE KEYS EN DW (EJEMPLO: HORA)
-- ============================================
CREATE OR REPLACE TRIGGER TRG_DIM_HORA
BEFORE INSERT ON BD2_DIM_HORA
FOR EACH ROW
DECLARE
  v_key NUMBER;
BEGIN
  PRC_DEVUELVE_CORRELATIVOS('BD2_DIM_HORA', v_key);
  :NEW.HORA_KEY := v_key;
END;
/

-- ============================================
-- PROCEDIMIENTOS PARA LLENAR CADA DIMENSIÃ“N CON MERGE
-- ============================================
CREATE OR REPLACE PROCEDURE PRC_DIM_HORA(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_HORA D
    USING (SELECT DISTINCT HORA FROM stage.BD2_STG_DATOS) S
    ON (D.HORA = S.HORA)
    WHEN NOT MATCHED THEN
      INSERT (HORA)
      VALUES (S.HORA);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_HORA D
    USING (SELECT DISTINCT HORA AS HORA FROM stage.BD2_STG_DATOS) S
    ON (D.HORA = S.HORA)
    WHEN NOT MATCHED THEN
      INSERT (HORA)
      VALUES (S.HORA);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_HORA');
END;
/

CREATE OR REPLACE PROCEDURE PRC_DIM_RONDA(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_RONDA D
    USING (SELECT DISTINCT RONDA FROM stage.BD2_STG_DATOS) S
    ON (D.NOMBRE_RONDA = S.RONDA)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_RONDA)
      VALUES (S.RONDA);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_RONDA D
    USING (SELECT DISTINCT RONDA FROM stage.BD2_STG_DATOS) S
    ON (D.NOMBRE_RONDA = S.RONDA)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_RONDA)
      VALUES (S.RONDA);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_RONDA');
END;
/


-- BD2_DIM_SELECCION
CREATE OR REPLACE PROCEDURE PRC_DIM_SELECCION(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_SELECCION D
    USING (
      SELECT NOMBRE_SELECCION FROM (
        SELECT DISTINCT EQUIPO_LOCAL AS NOMBRE_SELECCION FROM BD2_STG_DATOS
        UNION
        SELECT DISTINCT EQUIPO_VISITA AS NOMBRE_SELECCION FROM BD2_STG_DATOS
      )
    ) S
    ON (D.NOMBRE_SELECCION = S.NOMBRE_SELECCION)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_SELECCION)
      VALUES (S.NOMBRE_SELECCION);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_SELECCION D
    USING (
      SELECT NOMBRE_SELECCION FROM (
        SELECT DISTINCT EQUIPO_LOCAL AS NOMBRE_SELECCION FROM BD2_NO_HECHOS
        UNION
        SELECT DISTINCT EQUIPO_VISITA AS NOMBRE_SELECCION FROM BD2_NO_HECHOS
      )
    ) S
    ON (D.NOMBRE_SELECCION = S.NOMBRE_SELECCION)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_SELECCION)
      VALUES (S.NOMBRE_SELECCION);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_SELECCION');
END;
/


CREATE OR REPLACE PROCEDURE PRC_DIM_PAIS_ORGANIZADOR(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_PAIS_ORGANIZADOR D
    USING (SELECT DISTINCT PAIS FROM stage.BD2_STG_DATOS) S
    ON (D.NOMBRE_PAIS_ORGANIZADOR = S.PAIS)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_PAIS_ORGANIZADOR)
      VALUES (S.PAIS);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_PAIS_ORGANIZADOR D
    USING (SELECT DISTINCT PAIS FROM BD2_NO_HECHOS) S
    ON (D.NOMBRE_PAIS_ORGANIZADOR = S.PAIS)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_PAIS_ORGANIZADOR)
      VALUES (S.PAIS);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_PAIS_ORGANIZADOR');
END;
/


-- BD2_DIM_CIUDAD
CREATE OR REPLACE PROCEDURE PRC_DIM_CIUDAD(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_CIUDAD D
    USING (SELECT DISTINCT CIUDAD FROM stage.BD2_STG_DATOS) S
    ON (D.CIUDAD_ORGANIZADOR = S.CIUDAD)
    WHEN NOT MATCHED THEN
      INSERT (CIUDAD_ORGANIZADOR, PAIS_KEY)
      VALUES (S.CIUDAD, NULL);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_CIUDAD D
    USING (SELECT DISTINCT CIUDAD FROM BD2_NO_HECHOS) S
    ON (D.CIUDAD_ORGANIZADOR = S.CIUDAD)
    WHEN NOT MATCHED THEN
      INSERT (CIUDAD_ORGANIZADOR, PAIS_KEY)
      VALUES (S.CIUDAD, NULL);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_CIUDAD');
END;
/

-- BD2_DIM_ESTADIO
CREATE OR REPLACE PROCEDURE PRC_DIM_ESTADIO(p_param IN NUMBER) IS
BEGIN
  IF p_param = 1 THEN
    MERGE INTO BD2_DIM_ESTADIO D
    USING (SELECT DISTINCT ESTADIO FROM stage.BD2_STG_DATOS) S
    ON (D.NOMBRE_ESTADIO = S.ESTADIO)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_ESTADIO)
      VALUES (S.ESTADIO);
  ELSIF p_param = 2 THEN
    MERGE INTO BD2_DIM_ESTADIO D
    USING (SELECT DISTINCT ESTADIO FROM BD2_NO_HECHOS) S
    ON (D.NOMBRE_ESTADIO = S.ESTADIO)
    WHEN NOT MATCHED THEN
      INSERT (NOMBRE_ESTADIO)
      VALUES (S.ESTADIO);
  END IF;
  PRC_LLENA_SEGUIMIENTO('BD2_DIM_ESTADIO');
END;
/
