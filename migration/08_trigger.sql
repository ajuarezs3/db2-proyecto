CREATE OR REPLACE PROCEDURE PRC_SINCRONIZACION IS
BEGIN
  DBMS_OUTPUT.PUT_LINE('Iniciando PRC_SINCRONIZACION...');

  -- 1. Eliminar los datos actuales del STAGE
  DELETE FROM stage.BD2_STG_DATOS;
  COMMIT;

  DBMS_OUTPUT.PUT_LINE('Datos eliminados de BD2_STG_DATOS.');

  -- 2. Insertar desde HECHOS hacia STAGE (reconstruyendo los datos)
  INSERT INTO stage.BD2_STG_DATOS (
    ANIO, FECHA, HORA, RONDA, ESTADIO, CIUDAD, PAIS,
    EQUIPO_LOCAL, GOL_LOCAL, EQUIPO_VISITA, GOL_VISITA, ASISTENCIA
  )
  SELECT
    H.ANIO,
    TO_DATE(TO_CHAR(H.FECHA_KEY), 'YYYYMMDD') AS FECHA,
    DH.HORA,
    DR.NOMBRE_RONDA,
    DE.NOMBRE_ESTADIO,
    DC.CIUDAD_ORGANIZADOR,
    DP.NOMBRE_PAIS_ORGANIZADOR,
    SL.NOMBRE_SELECCION AS EQUIPO_LOCAL,
    H.GOL_LOCAL,
    SV.NOMBRE_SELECCION AS EQUIPO_VISITA,
    H.GOL_VISITA,
    H.ASISTENCIA
  FROM DW.BD2_HECHOS H
  LEFT JOIN DW.BD2_DIM_HORA DH ON H.HORA_KEY = DH.HORA_KEY
  LEFT JOIN DW.BD2_DIM_RONDA DR ON H.RONDA_KEY = DR.RONDA_KEY
  LEFT JOIN DW.BD2_DIM_ESTADIO DE ON H.ESTADIO_KEY = DE.ESTADIO_KEY
  LEFT JOIN DW.BD2_DIM_CIUDAD DC ON DE.CIUDAD_KEY = DC.CIUDAD_KEY
  LEFT JOIN DW.BD2_DIM_PAIS_ORGANIZADOR DP ON DC.PAIS_KEY = DP.PAIS_KEY
  LEFT JOIN DW.BD2_DIM_SELECCION SL ON H.LOCAL_KEY = SL.SELECCION_KEY
  LEFT JOIN DW.BD2_DIM_SELECCION SV ON H.VISITANTE_KEY = SV.SELECCION_KEY;

  DBMS_OUTPUT.PUT_LINE('Datos sincronizados a BD2_STG_DATOS.');

  -- 3. Registrar en WATERMARK por cada fila sincronizada
  INSERT INTO PRODUCCION.WATERMARK (TABLA, PK, OPERACION, FECHA_INSERT)
  SELECT DISTINCT 'BD2_STG_DATOS', ANIO, 'U', SYSDATE
  FROM DW.BD2_HECHOS;

  DBMS_OUTPUT.PUT_LINE('Watermark actualizado.');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error en PRC_SINCRONIZACION: ' || SQLERRM);
    ROLLBACK;
    RAISE;
END;
/
